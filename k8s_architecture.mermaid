%%{init: {'theme':'dark', 'themeVariables': { 
    'primaryColor': '#326CE5', 
    'primaryBorderColor': '#2857A4',
    'primaryTextColor': '#fff',
    'secondaryColor': '#F58220',
    'lineColor': '#CCCCCC',
    'tertiaryColor': '#28A745',
    'textColor': '#CCCCCC',
    'background': '#282a36'
}}}%%

flowchart TB
    %% Main container for the entire architecture
    subgraph K8S["üö¢ Kubernetes Architecture"]
        direction TB
        
        %% User interaction components
        subgraph UI["üë§ User Interfaces"]
            direction LR
            kubectl["üîß kubectl CLI"]
            dashboard["üìä Dashboard"]
            api_clients["üîå API Clients"]
        end
        
        %% Control Plane components
        subgraph CONTROL_PLANE["üß† Control Plane"]
            direction TB
            
            subgraph MASTER_NODES["üîê Master Nodes"]
                direction TB
                
                subgraph MASTER1["Master Node 1"]
                    %% API Server - the central hub
                    api1["üéÆ API Server"]
                    scheduler1["üß© Scheduler"]
                    controller_manager1["üîÑ Controller Manager"]
                    etcd1["üíæ etcd"]
                end
                
                subgraph MASTER2["Master Node 2"]
                    %% API Server - the central hub for HA
                    api2["üéÆ API Server"]
                    scheduler2["üß© Scheduler"]
                    controller_manager2["üîÑ Controller Manager"]
                    etcd2["üíæ etcd"]
                end
                
                subgraph MASTER3["Master Node 3"]
                    %% API Server - the central hub for HA
                    api3["üéÆ API Server"]
                    scheduler3["üß© Scheduler"]
                    controller_manager3["üîÑ Controller Manager"]
                    etcd3["üíæ etcd"]
                end
            end
            
            %% Logical representation of controllers
            subgraph CONTROLLERS["üîÑ Controllers"]
                direction LR
                replication["Replication Controller"]
                endpoint["Endpoint Controller"]
                node["Node Controller"]
                service_account["Service Account Controller"]
                deployment["Deployment Controller"]
                job["Job Controller"]
            end
            
            %% Reference to the API server for connections (logical)
            api["üéÆ API Server"]
            
            %% Reference to the scheduler for connections (logical)
            scheduler["üß© Scheduler"]
            
            %% Reference to the data storage for connections (logical)
            etcd["üíæ etcd"]
            
            %% Cloud controller manager
            cloud_controller["‚òÅÔ∏è Cloud Controller Manager"]
        end
        
        %% Node components
        subgraph NODES["üñ•Ô∏è Worker Nodes"]
            direction TB
            
            subgraph NODE1["Node 1"]
                direction TB
                kubelet1["ü§ñ Kubelet"]
                kube_proxy1["üîÄ Kube Proxy"]
                
                %% Container runtime
                subgraph CONTAINERS1["üê≥ Container Runtime"]
                    pod1["Pod"]
                    pod2["Pod"]
                end
            end
            
            subgraph NODE2["Node 2"]
                direction TB
                kubelet2["ü§ñ Kubelet"]
                kube_proxy2["üîÄ Kube Proxy"]
                
                %% Container runtime
                subgraph CONTAINERS2["üê≥ Container Runtime"]
                    pod3["Pod"]
                    pod4["Pod"]
                end
            end
            
            %% Add-ons
            subgraph ADDONS["üì¶ Add-ons"]
                direction LR
                dns["CoreDNS"]
                metrics["Metrics Server"]
                ingress["Ingress Controller"]
                cni["CNI Plugin"]
            end
        end
    end
    
    %% Connections between components
    UI --> api
    
    %% Master node internal connections
    api1 & api2 & api3 --- etcd1 & etcd2 & etcd3
    
    %% Logical connections for diagram clarity
    api --> etcd
    api --> CONTROLLERS
    CONTROLLERS --> api
    api --> scheduler
    scheduler --> api
    api --> cloud_controller
    cloud_controller --> api
    
    %% Worker node connections to control plane
    api --> kubelet1 & kubelet2
    kubelet1 --> CONTAINERS1
    kubelet2 --> CONTAINERS2
    kubelet1 & kubelet2 --> api
    
    kube_proxy1 & kube_proxy2 --> api
    
    %% Add-ons connections
    ADDONS --> api
    
    %% External cloud providers connection
    cloud_controller -.-> cloud["‚òÅÔ∏è Cloud Provider API"]
    
    %% HA connections between master nodes
    MASTER1 --- MASTER2 --- MASTER3
    MASTER1 --- MASTER3
    
    %% No custom styling for better compatibility